<!DOCTYPE html>
<html>
<head>
  <!-- Required meta tags for Bootstrap-->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <title>Available Workspaces</title>
  <style>
    /* Custom CSS to style odd rows with gray background */
    .odd-row {
      background-color: #f2f2f2;
    }
  </style>
</head>
<body class="container pt-5">
  <!-- Login button -->
  <a class="btn btn-primary" href="/login" style="float: right; margin-bottom: 10px;">Login</a>
  
  <h1>Available Workspaces</h1>
  <label for="smokingFilter">Smoking:</label>
<select id="smokingFilter">
  <option value="">All</option>
  <option value="yes">Yes</option>
  <option value="no">No</option>
</select>

<label for="acFilter">Has AC:</label>
<select id="acFilter">
  <option value="">All</option>
  <option value="yes">Yes</option>
  <option value="no">No</option>
</select>

<label for="publicTransFilter">Public Trans:</label>
<select id="publicTransFilter">
  <option value="">All</option>
  <option value="yes">Yes</option>
  <option value="no">No</option>
</select>
<br>
  <table class="table">
    <thead>
      <tr class="sortable">
        <th scope="col">Type</th>
        <th scope="col" class="num-sort">Seats</th>
        <th scope="col">Smoking</th>
        <th scope="col" class="num-sort">Availability</th>
        <th scope="col">Lease</th>
        <th scope="col" class="num-sort">Price</th>
        <th scope="col">Has AC</th>
        <th scope="col">Printer</th>
        <th scope="col">Landline</th>
        <th scope="col">Has Onsite Gym</th>
        <th scope="col">Parking</th>
        <th scope="col">Public Trans</th>
        <th scope="col">Address</th>
        <th scope="col">Image</th>
      </tr>
    </thead>
    <tbody>
      <% workspaces.forEach((workspace, index) => { %>
        <tr class="<%= index % 2 === 0 ? 'odd-row' : '' %>">
          <td><%= workspace.type %></td>
          <td><%= workspace.seats %></td>
          <td><%= workspace.smoking === "true" ? 'yes' : 'no' %></td>
          <td><%= workspace.availability.toLocaleDateString() %></td>
          <td><%= workspace.lease %></td>
          <td><%= workspace.price %></td>
          <td><%= workspace.hasAirConditioner === "true" ? 'yes' : 'no' %></td>
          <td><%= workspace.printer %></td>
          <td><%= workspace.landline %></td>
          <td><%= workspace.hasOnsiteGym === "true" ? 'yes' : 'no' %></td>
          <td><%= workspace.parking %></td>
          <% if (workspace.propertyId) { %>
            <% const property = properties.find(p => p._id.toString() === workspace.propertyId.toString()); %>
            <td><%= property ? property.publicTrans : 'N/A' %></td>
            
            <td>
                <%= property.address1 %>
                <% if (property.address2) { %>
                  <%= property.address2 %>,
                <% } %>
                <%= property.city %>,
                <%= property.state %>,
                <%= property.postalcode %>
              </td>
          <% } else { %>
            <td>N/A</td>
            <td>N/A</td>
          <% } %>
          <td>
            <img src="<%= workspace.imageUrl %>" alt="No image for <%= workspace.type %>" style="width: 50px; height: 50px;">
          </td>
        </tr>
      <% }); %>
    </tbody>
  </table>


  <script>
    // ...
  
    // Get the filter inputs
    var smokingFilter = document.getElementById('smokingFilter');
    var acFilter = document.getElementById('acFilter');
    var publicTransFilter = document.getElementById('publicTransFilter');
  
    // Add an event listener to filter the table whenever the selected option changes
    smokingFilter.addEventListener('change', filterTable);
    acFilter.addEventListener('change', filterTable);
    publicTransFilter.addEventListener('change', filterTable);
  
    function filterTable() {
      var rows = document.querySelector('.table').rows;
      for (let i = 1; i < rows.length; i++) { // Skip the header row
        var smoking = rows[i].getElementsByTagName('TD')[2].textContent;
        var ac = rows[i].getElementsByTagName('TD')[6].textContent;
        var publicTrans = rows[i].getElementsByTagName('TD')[11].textContent;
  
        if ((smokingFilter.value === "" || smokingFilter.value === smoking) &&
            (acFilter.value === "" || acFilter.value === ac) &&
            (publicTransFilter.value === "" || publicTransFilter.value === publicTrans)) {
          rows[i].style.display = ""; // Show row
        } else {
          rows[i].style.display = "none"; // Hide row
        }
      }
    }
  </script>

  <script>
    // This function will parse a string into number if it's possible,
    // otherwise it will return the original string.
    function parseValue(value) {
        var parsed = Number(value);
        return isNaN(parsed) ? value : parsed;
    }

    // Returns a comparison function for the given direction.
    function getComparator(dir) {
        return dir === 'asc'
            ? (a, b) => a > b ? 1 : -1
            : (a, b) => a < b ? 1 : -1;
    }

    // Sorts a table column.
    function sortTable(n, dir) {
        var table, rows, switching, i, x, y, shouldSwitch, cmp;
        table = document.querySelector('.table');
        switching = true;
        cmp = getComparator(dir);

        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = parseValue(rows[i].getElementsByTagName("TD")[n].innerHTML.trim());
                y = parseValue(rows[i + 1].getElementsByTagName("TD")[n].innerHTML.trim());

                if (cmp(x, y) > 0) {
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }

    // Attach click handlers.
    var sortDirections = {};
    var headerRow = document.querySelector('.table thead tr');
    var headers = Array.from(headerRow.getElementsByTagName('th'));

    headers.forEach((header, i) => {
        if (header.classList.contains('num-sort')) {
            sortDirections[i] = 'desc';
            header.addEventListener('click', function() {
                sortTable(i, sortDirections[i]);
                sortDirections[i] = sortDirections[i] === 'desc' ? 'asc' : 'desc';
            });
        }
    });
  </script>
</body>
</html>
